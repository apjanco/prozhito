# Generated by Django 2.1.7 on 2019-07-22 19:18

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0007_auto_20190423_1543'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collections',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('text', models.TextField()),
                ('tag', models.IntegerField()),
            ],
            options={
                'db_table': 'collections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiariesLanguages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diary', models.IntegerField()),
                ('language', models.IntegerField()),
            ],
            options={
                'db_table': 'diaries_languages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiariesLatest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.IntegerField()),
                ('diary', models.IntegerField()),
                ('weight', models.IntegerField()),
            ],
            options={
                'db_table': 'diaries_latest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiariesStatuses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diary', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'diaries_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=14)),
                ('notes', models.IntegerField()),
                ('firstnote', models.DateField(db_column='firstNote')),
                ('lastnote', models.DateField(db_column='lastNote')),
                ('team', models.TextField()),
                ('premier', models.IntegerField(blank=True, null=True)),
                ('user', models.IntegerField()),
                ('updateddate', models.IntegerField(db_column='updatedDate')),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'diary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiaryComments',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('diary', models.IntegerField()),
                ('text', models.TextField()),
                ('user', models.IntegerField()),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'diary_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('text', models.TextField()),
                ('pictures', models.TextField()),
                ('user', models.IntegerField()),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('diary', models.IntegerField()),
                ('text', models.TextField()),
                ('date', models.DateField()),
                ('datetop', models.DateField(db_column='dateTop')),
                ('notdated', models.IntegerField(db_column='notDated')),
                ('julian_calendar', models.IntegerField()),
                ('pictures', models.IntegerField()),
                ('user', models.IntegerField()),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotesComments',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('number', models.BigIntegerField()),
                ('note', models.IntegerField()),
                ('text', models.TextField()),
                ('user', models.IntegerField()),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'notes_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotesDatestr',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('datestr', models.TextField(db_column='dateStr')),
            ],
            options={
                'db_table': 'notes_dateStr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotesPictures',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('note', models.IntegerField()),
                ('name', models.TextField()),
                ('title', models.TextField()),
                ('user', models.IntegerField()),
            ],
            options={
                'db_table': 'notes_pictures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotesPreview',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('diary', models.IntegerField()),
                ('user', models.IntegerField()),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'notes_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotesPreviewReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview', models.IntegerField()),
                ('note', models.IntegerField()),
            ],
            options={
                'db_table': 'notes_preview_reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotesQuotes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('diary', models.IntegerField()),
                ('note', models.IntegerField()),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'notes_quotes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('firstname', models.TextField(db_column='firstName')),
                ('lastname', models.TextField(db_column='lastName')),
                ('thirdname', models.TextField(db_column='thirdName')),
                ('nickname', models.TextField()),
                ('edition', models.TextField()),
                ('birthday', models.TextField(db_column='birthDay')),
                ('deathday', models.TextField(db_column='deathDay')),
                ('birthday2', models.DateField(db_column='birthDay2')),
                ('deathday2', models.DateField(db_column='deathDay2')),
                ('agearound', models.IntegerField(db_column='ageAround')),
                ('info', models.TextField()),
                ('additional_info', models.TextField()),
                ('forvolunteers', models.TextField(db_column='forVolunteers')),
                ('wikilink', models.TextField(db_column='wikiLink')),
                ('avatar', models.IntegerField()),
                ('countdiaries', models.IntegerField(db_column='countDiaries')),
                ('user', models.IntegerField()),
                ('gender', models.IntegerField()),
                ('updated', models.IntegerField()),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'persons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonsPartners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.IntegerField()),
                ('partner', models.IntegerField()),
            ],
            options={
                'db_table': 'persons_partners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonsPictures',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('person', models.IntegerField()),
                ('name', models.TextField()),
                ('title', models.TextField()),
                ('user', models.IntegerField()),
                ('createddate', models.IntegerField(db_column='createdDate')),
            ],
            options={
                'db_table': 'persons_pictures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonsStatus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'persons_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonsStatusReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField()),
                ('persons', models.IntegerField()),
            ],
            options={
                'db_table': 'persons_status_reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPartners',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('logo', models.IntegerField()),
                ('info', models.TextField()),
                ('date', models.IntegerField()),
            ],
            options={
                'db_table': 'project_partners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTeam',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('logo', models.IntegerField()),
                ('date', models.IntegerField()),
            ],
            options={
                'db_table': 'project_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=24)),
                ('last_active', models.PositiveIntegerField()),
                ('contents', models.TextField()),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SphinxCountersNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maxts', models.IntegerField()),
            ],
            options={
                'db_table': 'sphinx_counters_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statuses',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('email', models.TextField()),
                ('status', models.IntegerField()),
                ('date', models.IntegerField()),
            ],
            options={
                'db_table': 'subscribe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagsDiaries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diary', models.IntegerField()),
                ('tag', models.IntegerField()),
            ],
            options={
                'db_table': 'tags_diaries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagsNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField()),
                ('tag', models.IntegerField()),
            ],
            options={
                'db_table': 'tags_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagsPersons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('group', models.IntegerField()),
            ],
            options={
                'db_table': 'tags_persons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagsType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('clearname', models.TextField(db_column='clearName')),
            ],
            options={
                'db_table': 'tags_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('firstname', models.TextField(db_column='firstName')),
                ('lastname', models.TextField(db_column='lastName')),
                ('password', models.TextField()),
                ('email', models.TextField()),
                ('admin', models.IntegerField()),
                ('status', models.IntegerField()),
                ('date', models.IntegerField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='edition',
            name='journal',
        ),
        migrations.RemoveField(
            model_name='publication',
            name='author',
        ),
        migrations.RemoveField(
            model_name='publication',
            name='issue',
        ),
        migrations.RemoveField(
            model_name='publication',
            name='journal',
        ),
        migrations.DeleteModel(
            name='TableofContents',
        ),
        migrations.DeleteModel(
            name='Author',
        ),
        migrations.DeleteModel(
            name='Edition',
        ),
        migrations.DeleteModel(
            name='Journal',
        ),
        migrations.DeleteModel(
            name='Publication',
        ),
    ]
